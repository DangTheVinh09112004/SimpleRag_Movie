import streamlit as st
import requests
import uuid

# URL API v√† session_id duy nh·∫•t cho m·ªói phi√™n tr√≤ chuy·ªán
FLASK_API_URL = "http://localhost:5000/api/vinh_dep_trai/chat"
session_id = str(uuid.uuid4())

# CSS t√πy ch·ªânh ƒë·ªÉ trang tr√≠
st.markdown("""
    <style>
        .main { background-color: #01579b; font-family: Arial, sans-serif; } /* N·ªÅn xanh l·ªõp bi·ªÉn nh·∫°t */
        .stButton>button { background-color: #ff5e57; color: white; border-radius: 8px; }
        .stButton>button:hover { background-color: #ff7b72; }
        .chat-container { max-width: 700px; margin: auto; padding: 10px; border-radius: 15px; }
        .user-chat { background-color: #4fc3f7; color: white; padding: 10px; border-radius: 8px; margin: 5px; } /* N·ªÅn xanh l·ªõp bi·ªÉn ƒë·∫≠m */
        .assistant-chat { background-color: #0097a7; color: white; padding: 10px; border-radius: 8px; margin: 5px; } /* N·ªÅn xanh l·ªõp bi·ªÉn ƒë·∫≠m */
        .logo-container img { border-radius: 10px; }
    </style>
""", unsafe_allow_html=True)

# Hi·ªÉn th·ªã logo v√† ti√™u ƒë·ªÅ
logo = "‚ÄîPngtree‚Äîpopcorn movie film_2704218.png"
st.sidebar.image(logo, width=227)
st.title("üçø Movie Film Chat Assistant")

# Kh·ªüi t·∫°o l·ªãch s·ª≠ tr√≤ chuy·ªán n·∫øu ch∆∞a c√≥
if "chat_history" not in st.session_state:
    st.session_state.chat_history = []

# Hi·ªÉn th·ªã l·ªãch s·ª≠ tr√≤ chuy·ªán
for message in st.session_state.chat_history:
    with st.container():
        role_class = "user-chat" if message["role"] == "user" else "assistant-chat"
        st.markdown(f"<div class='{role_class}'>{message['content']}</div>", unsafe_allow_html=True)

# Nh·∫≠p v√† g·ª≠i tin nh·∫Øn c·ªßa ng∆∞·ªùi d√πng
if prompt := st.chat_input("B·∫°n c√≥ c·∫ßn t∆∞ v·∫•n b·ªô phim g√¨ h√¥m nay kh√¥ng?"):
    st.session_state.chat_history.append({"role": "user", "content": prompt})
    st.markdown(f"<div class='user-chat'>{prompt}</div>", unsafe_allow_html=True)

    # Hi·ªÉn th·ªã thanh tr·∫°ng th√°i khi ch·ªù ph·∫£n h·ªìi t·ª´ API
    with st.spinner("ƒêang t√¨m ki·∫øm phim ph√π h·ª£p..."):
        payload = {
            "query": prompt,
            "session_id": session_id
        }
        response = requests.post(FLASK_API_URL, json=payload)

    # X·ª≠ l√Ω ph·∫£n h·ªìi t·ª´ API
    if response.status_code == 200:
        api_response = response.json()
        assistant_response = api_response.get("response", "Kh√¥ng c√≥ ph·∫£n h·ªìi t·ª´ API.")
        st.session_state.chat_history.append({"role": "assistant", "content": assistant_response})
        st.markdown(f"<div class='assistant-chat'>{assistant_response}</div>", unsafe_allow_html=True)
    else:
        st.error(f"ƒê√£ x·∫£y ra l·ªói: {response.status_code}")